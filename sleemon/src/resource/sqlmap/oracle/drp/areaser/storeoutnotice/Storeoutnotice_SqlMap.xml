<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Storeoutnotice">
	<typeAlias type="com.hoperun.drp.areaser.storeoutnotice.model.StoreoutnoticeModel" alias="storeoutnoticeModel" />
	<typeAlias type="com.hoperun.drp.areaser.storeoutnotice.model.StoreoutnoticeChldModel" alias="storeoutnoticeChldModel" />

	<!-- 使用storeoutnoticeModel装载结果集 -->
	<resultMap id="storeoutnoticeModel" class="storeoutnoticeModel">
		<result column="STOREOUT_NOTICE_ID" property="STOREOUT_NOTICE_ID" />
	</resultMap>
	<!-- 使用storeoutnoticeChldModel装载结果集 -->
	<resultMap id="storeoutnoticeChldModel" class="storeoutnoticeChldModel">
		<result column="STOREOUT_NOTICE_DTL_ID" property="STOREOUT_NOTICE_DTL_ID" />
	</resultMap>
	
	<!--主表动态查询 and 列表分页 -->
<sql id="queryDynSql">
  <isNotEmpty prepend="and" property="SEND_CHANN_NO">
    u.SEND_CHANN_NO like '%'||#SEND_CHANN_NO#||'%'
  </isNotEmpty>
  <isNotEmpty prepend="and" property="SEND_CHANN_NAME">
    u.SEND_CHANN_NAME like '%'||#SEND_CHANN_NAME#||'%'
  </isNotEmpty>
  <isNotEmpty prepend="and" property="FROM_BILL_NO">
    u.FROM_BILL_NO like '%'||#FROM_BILL_NO#||'%'
  </isNotEmpty>
  <isNotEmpty prepend="and" property="STOREOUT_NOTICE_NO">
    u.STOREOUT_NOTICE_NO  like '%'||#STOREOUT_NOTICE_NO#||'%'
  </isNotEmpty>
  <isNotEmpty prepend="and" property="STOREOUT_STORE_NO">
    u.STOREOUT_STORE_NO like '%'||#STOREOUT_STORE_NO#||'%'
  </isNotEmpty>
  <isNotEmpty prepend="and" property="CRE_TIME_BEGIN">
	  <![CDATA[  u.CRE_TIME >= to_date(#CRE_TIME_BEGIN#,'yyyy-MM-DD HH24:MI:SS')]]>
  </isNotEmpty> 
  <isNotEmpty prepend="and" property="CRE_TIME_END">
	  <![CDATA[  u.CRE_TIME <= to_date(#CRE_TIME_END#,'yyyy-MM-DD HH24:MI:SS')]]>
  </isNotEmpty> 
  <isNotEmpty prepend="and" property="SALE_DATE_BEG">
	  <![CDATA[  u.SALE_DATE >= to_date(#SALE_DATE_BEG#,'yyyy-MM-DD')]]>
  </isNotEmpty> 
  <isNotEmpty prepend="and" property="SALE_DATE_END">
	  <![CDATA[  u.SALE_DATE <= to_date(#SALE_DATE_END#,'yyyy-MM-DD')]]>
  </isNotEmpty> 
  <isNotEmpty prepend="and" property="STATE">
    u.STATE = #STATE#
  </isNotEmpty>
   <isNotEmpty prepend="and" property="searchSTATE">
    u.STATE = #searchSTATE#
  </isNotEmpty>
  <isNotEmpty prepend="and" property="STOREOUT_STORE_NAME">
    u.STOREOUT_STORE_NAME = #STOREOUT_STORE_NAME#
  </isNotEmpty>
  <isNotEmpty prepend="and" property="RECV_CHANN_NO">
    u.RECV_CHANN_NO = #RECV_CHANN_NO#
  </isNotEmpty>
  <isNotEmpty prepend="and" property="RECV_CHANN_NAME">
    u.RECV_CHANN_NAME = #RECV_CHANN_NAME#
  </isNotEmpty>
  <isNotEmpty prepend="and " property="DEL_FLAG">
	 u.DEL_FLAG=#DEL_FLAG#
  </isNotEmpty>
  <isNotEmpty prepend="and " property="SQL">
	 $SQL$
  </isNotEmpty>
  <isNotEmpty prepend="and " property="QXJBCON">
	$QXJBCON$
  </isNotEmpty>
	 
</sql>
<sql id="orderSql">
   <isNotEmpty prepend=" " property="orderField">$orderField$</isNotEmpty>
</sql>
<!-- 主表查询SQL -->
<sql id="coreSql">
  <![CDATA[ 
	select 
		u.STOREOUT_NOTICE_ID,
		u.STOREOUT_NOTICE_NO,
		u.FROM_BILL_ID,
		u.FROM_BILL_NO,
		u.SEND_CHANN_ID,
		u.SEND_CHANN_NO,
		u.SEND_CHANN_NAME,
		u.STOREOUT_STORE_ID,
		u.STOREOUT_STORE_NO,
		u.STOREOUT_STORE_NAME,
		u.RECV_CHANN_ID,
		u.RECV_CHANN_NO,
		u.RECV_CHANN_NAME,
		to_char(u.SALE_DATE,'yyyy-mm-dd') SALE_DATE,
		u.RECV_ADDR_NO,
		u.RECV_ADDR,
		u.STOREOUT_AMOUNT,
		u.STATE,
		u.CRE_NAME,
		to_char(u.CRE_TIME,'yyyy-mm-dd HH24:MI:SS') CRE_TIME,
		u.DEPT_NAME,
		u.OTHER_COST
      from DRP_STOREOUT_NOTICE u
   ]]>
    <dynamic prepend="where">
	   <include refid="queryDynSql" />
	</dynamic>
	<dynamic prepend="order by ">
	   <include refid="orderSql"/>
	</dynamic>
</sql>
<!-- 主表分页查询 -->
<select id="pageQuery" parameterClass="map" resultClass="java.util.HashMap">
		<include refid="public.pageBegin" />
		<include refid="coreSql" />
		<include refid="public.pageEnd" />
	</select>
<!-- 分页计数 -->
<select id="pageCount" parameterClass="map" resultClass="int">
      <![CDATA[select count(0) cnt FROM DRP_STOREOUT_NOTICE u 
      ]]>
	<dynamic prepend="where">
			<include refid="queryDynSql"/>
	</dynamic>
</select>
<!-- 主表查询 -->
<select id="query" parameterClass="map" resultClass="java.util.HashMap">
	<include refid="coreSql" />
</select>
	<select id="loadById" parameterClass="String" resultClass="java.util.HashMap">
	<![CDATA[ 
	  select 
	    u.STOREOUT_NOTICE_ID,
		u.STOREOUT_NOTICE_NO,
		u.FROM_BILL_ID,
		u.FROM_BILL_NO,
		u.SEND_CHANN_ID,
		u.SEND_CHANN_NO,
		u.SEND_CHANN_NAME,
		u.STOREOUT_STORE_ID,
		u.STOREOUT_STORE_NO,
		u.STOREOUT_STORE_NAME,
		u.RECV_CHANN_ID,
		u.RECV_CHANN_NO,
		u.RECV_CHANN_NAME,
		to_char(u.SALE_DATE,'yyyy-mm-dd') SALE_DATE,
		u.RECV_ADDR_NO,
		u.RECV_ADDR,
		u.STOREOUT_AMOUNT,
		u.STATE,
		u.REMARK,
		u.CREATOR,
		u.CRE_NAME,
		to_char(u.CRE_TIME,'yyyy-mm-dd HH24:MI:SS') CRE_TIME,
		u.UPDATOR,
		u.UPD_NAME,
		to_char(u.UPD_TIME,'yyyy-mm-dd HH24:MI:SS') UPD_TIME,
		u.DEPT_NAME,
		u.ORG_NAME,
		u.LEDGER_NAME,
		u.OTHER_COST
      from DRP_STOREOUT_NOTICE u
      where 
		u.STOREOUT_NOTICE_ID = #STOREOUT_NOTICE_ID#
	]]>
</select>
<sql id="queryDynSqlChld">
  <isNotEmpty prepend="and" property="DEL_FLAG">
     u.DEL_FLAG=#DEL_FLAG#
  </isNotEmpty>
</sql>
<sql id="orderSqlChld">
	 <isNotEmpty prepend=" " property="orderField">$orderField$</isNotEmpty>
</sql>
<sql id="coreSqlChld">
	<![CDATA[ 
     select 
		u.STOREOUT_NOTICE_DTL_ID,
		u.STOREOUT_NOTICE_ID,
		u.PRD_ID,
		u.PRD_NO,
		u.PRD_NAME,
		u.PRD_SPEC,
		u.PRD_COLOR,
		u.BRAND,
		u.STD_UNIT,
		u.NOTICE_NUM,
		u.PRICE,
		u.DECT_RATE,
		u.DECT_PRICE,
		u.DECT_AMOUNT,
		u.REMARK,
		u.FROM_BILL_DTL_ID,
		u.SPCL_TECH_ID,
		u.REAL_NUM,
		a.SPCL_TECH_FLAG,
		acct.STORE_NUM
	    from DRP_STOREOUT_NOTICE_DTL u 
	   
      left join DRP_STOREOUT_NOTICE s on u.STOREOUT_NOTICE_ID=s.STOREOUT_NOTICE_ID
      left join DRP_SPCL_TECH a on u.SPCL_TECH_ID = a.SPCL_TECH_ID and a.USE_FLAG = 1
      left join DRP_STORE_ACCT acct 
      	on u.PRD_ID = acct.PRD_ID 
      	and (( u.SPCL_TECH_ID is not null  and u.SPCL_TECH_ID = acct.SPCL_TECH_ID)  or ACCT.SPCL_TECH_ID is null)
	    and acct.STORE_ID = s.STOREOUT_STORE_ID

   ]]>
</sql>
 <!-- 根据主表ID查询明细 -->
  <select id="queryChldByFkId" parameterClass="map" resultClass="java.util.HashMap">
	  <include refid="coreSqlChld"/>
	  <dynamic prepend="where">
			u.STOREOUT_NOTICE_ID = #STOREOUT_NOTICE_ID#
			
	  </dynamic>
	  <dynamic prepend="and">
	   <include refid="queryDynSqlChld" />
	  </dynamic>
	  <isNotNull prepend=" order by " property="orderField">
			<include refid="orderSqlChld"/>
	  </isNotNull>
  </select>
  <!--根据明细表IDS查询明细 -->
 <select id="loadChldByIds" parameterClass="map" resultClass="java.util.HashMap">
	  <include refid="coreSqlChld"/>
	  <dynamic prepend="where">
	        u.STOREOUT_NOTICE_DTL_ID in ($STOREOUT_NOTICE_DTL_IDS$)
	        and acct.STORE_ID = s.STOREOUT_STORE_ID
	  </dynamic>
	  <dynamic prepend="and">
	   <include refid="queryDynSqlChld" />
	  </dynamic>
	  <isNotNull prepend=" order by " property="orderField">
			<include refid="orderSqlChld"/>
	  </isNotNull>
  </select>
  <insert id="insert" parameterClass="map">
  <![CDATA[
	  insert into DRP_STOREOUT_NOTICE(
		STOREOUT_NOTICE_ID,
		STOREOUT_NOTICE_NO,
		FROM_BILL_ID,
		FROM_BILL_NO,
		SEND_CHANN_ID,
		SEND_CHANN_NO,
		SEND_CHANN_NAME,
		STOREOUT_STORE_ID,
		STOREOUT_STORE_NO,
		STOREOUT_STORE_NAME,
		RECV_CHANN_ID,
		RECV_CHANN_NO,
		RECV_CHANN_NAME,
		SALE_DATE,
		RECV_ADDR_NO,
		RECV_ADDR,
		STOREOUT_AMOUNT,
		STATE,
		REMARK,
		CREATOR,
		CRE_NAME,
		CRE_TIME,
		DEPT_ID,
		DEPT_NAME,
		ORG_ID,
		ORG_NAME,
		LEDGER_ID,
		LEDGER_NAME,
		DEL_FLAG,
		OTHER_COST
	   )values(
		#STOREOUT_NOTICE_ID#,
		#STOREOUT_NOTICE_NO#,
		#FROM_BILL_ID#,
		#FROM_BILL_NO#,
		#SEND_CHANN_ID#,
		#SEND_CHANN_NO#,
		#SEND_CHANN_NAME#,
		#STOREOUT_STORE_ID#,
		#STOREOUT_STORE_NO#,
		#STOREOUT_STORE_NAME#,
		#RECV_CHANN_ID#,
		#RECV_CHANN_NO#,
		#RECV_CHANN_NAME#,
		to_date(#SALE_DATE#,'yyyy-mm-dd'),
		#RECV_ADDR_NO#,
		#RECV_ADDR#,
		#STOREOUT_AMOUNT#,
		#STATE#,
		#REMARK#,
		#CREATOR#,
		#CRE_NAME#,
		sysdate,
		#DEPT_ID#,
		#DEPT_NAME#,
		#ORG_ID#,
		#ORG_NAME#,
		#LEDGER_ID#,
		#LEDGER_NAME#,
		#DEL_FLAG#,
		#OTHER_COST#
		)
   ]]>
</insert>
<update id="updateById" parameterClass="map">
	<![CDATA[ update DRP_STOREOUT_NOTICE ]]>
	<dynamic prepend="set">
    <isNotNull property="FROM_BILL_NO" prepend=","><![CDATA[FROM_BILL_NO = #FROM_BILL_NO# ]]></isNotNull>
    <isNotNull property="SEND_CHANN_ID" prepend=","><![CDATA[SEND_CHANN_ID = #SEND_CHANN_ID# ]]></isNotNull>
    <isNotNull property="FROM_BILL_ID" prepend=","><![CDATA[FROM_BILL_ID = #FROM_BILL_ID# ]]></isNotNull>
    <isNotNull property="SEND_CHANN_NO" prepend=","><![CDATA[SEND_CHANN_NO = #SEND_CHANN_NO# ]]></isNotNull>
    <isNotNull property="SEND_CHANN_NAME" prepend=","><![CDATA[SEND_CHANN_NAME = #SEND_CHANN_NAME# ]]></isNotNull>
    <isNotNull property="STOREOUT_STORE_ID" prepend=","><![CDATA[STOREOUT_STORE_ID = #STOREOUT_STORE_ID# ]]></isNotNull>
    <isNotNull property="STOREOUT_STORE_NO" prepend=","><![CDATA[STOREOUT_STORE_NO = #STOREOUT_STORE_NO# ]]></isNotNull>
    <isNotNull property="STOREOUT_STORE_NAME" prepend=","><![CDATA[STOREOUT_STORE_NAME = #STOREOUT_STORE_NAME# ]]></isNotNull>
    <isNotNull property="RECV_CHANN_ID" prepend=","><![CDATA[RECV_CHANN_ID = #RECV_CHANN_ID# ]]></isNotNull>
    <isNotNull property="RECV_CHANN_NO" prepend=","><![CDATA[RECV_CHANN_NO = #RECV_CHANN_NO# ]]></isNotNull>
    <isNotNull property="RECV_CHANN_NAME" prepend=","><![CDATA[RECV_CHANN_NAME = #RECV_CHANN_NAME# ]]></isNotNull>
    <isNotNull property="SALE_DATE" prepend=","><![CDATA[SALE_DATE = to_date(#SALE_DATE#,'yyyy-mm-dd') ]]></isNotNull>
    <isNotNull property="RECV_ADDR_NO" prepend=","><![CDATA[RECV_ADDR_NO = #RECV_ADDR_NO# ]]></isNotNull>
    <isNotNull property="RECV_ADDR" prepend=","><![CDATA[RECV_ADDR = #RECV_ADDR# ]]></isNotNull>
    <isNotNull property="STOREOUT_AMOUNT" prepend=","><![CDATA[STOREOUT_AMOUNT = #STOREOUT_AMOUNT# ]]></isNotNull>
    <isNotNull property="STATE" prepend=","><![CDATA[STATE = #STATE# ]]></isNotNull>
    <isNotNull property="REMARK" prepend=","><![CDATA[REMARK = #REMARK# ]]></isNotNull>
    <isNotNull property="UPD_NAME" prepend=","><![CDATA[UPD_NAME = #UPD_NAME# ]]></isNotNull>
    <isNotNull property="UPDATOR" prepend=","><![CDATA[UPDATOR = #UPDATOR# ]]></isNotNull>
     <isNotNull property="UPD_TIME" prepend=","><![CDATA[UPD_TIME = sysdate ]]></isNotNull>
     <isNotNull property="OTHER_COST" prepend=","><![CDATA[OTHER_COST = #OTHER_COST# ]]></isNotNull>
     
    </dynamic>
	<![CDATA[ where STOREOUT_NOTICE_ID = #STOREOUT_NOTICE_ID#]]>
</update>
<!-- 逻辑删除 只是更新状态-->
<delete id="delete" parameterClass="map">
	<![CDATA[ update DRP_STOREOUT_NOTICE 
	               set DEL_FLAG = #DEL_FLAG#
                      ,UPD_NAME=#UPD_NAME#
                     ,UPDATOR=#UPDATOR#
                      ,UPD_TIME=sysdate
 	  where 
	     STOREOUT_NOTICE_ID = #STOREOUT_NOTICE_ID:VARCHAR# 
    ]]>
</delete>
<!--根据主键ID删除明细 -->
<delete id="delChldByFkId" parameterClass="map">
	<![CDATA[ update DRP_STOREOUT_NOTICE_DTL 
	               set DEL_FLAG = #DEL_FLAG#	 
 	  where 
	      STOREOUT_NOTICE_ID = #STOREOUT_NOTICE_ID:VARCHAR#
    ]]>
</delete>
<!--根据明细IDs删除明细 -->
<delete id="deleteChldByIds" parameterClass="map">
	<![CDATA[ update DRP_STOREOUT_NOTICE_DTL 
	               set DEL_FLAG = #DEL_FLAG#	 
 	  where 
	      STOREOUT_NOTICE_DTL_ID in ($STOREOUT_NOTICE_DTL_IDS$)
    ]]>
</delete>
<!--明细表更新 -->
<update id="updateChldById" parameterClass="map">
	<![CDATA[ update DRP_STOREOUT_NOTICE_DTL ]]>
	<dynamic prepend="set">
    <isNotNull property="PRD_ID" prepend=","><![CDATA[PRD_ID = #PRD_ID# ]]></isNotNull>
    <isNotNull property="PRD_NO" prepend=","><![CDATA[PRD_NO = #PRD_NO# ]]></isNotNull>
    <isNotNull property="PRD_NAME" prepend=","><![CDATA[PRD_NAME = #PRD_NAME# ]]></isNotNull>
    <isNotNull property="PRD_SPEC" prepend=","><![CDATA[PRD_SPEC = #PRD_SPEC# ]]></isNotNull>
    <isNotNull property="PRD_COLOR" prepend=","><![CDATA[PRD_COLOR = #PRD_COLOR# ]]></isNotNull>
    <isNotNull property="BRAND" prepend=","><![CDATA[BRAND = #BRAND# ]]></isNotNull>
    <isNotNull property="STD_UNIT" prepend=","><![CDATA[STD_UNIT = #STD_UNIT# ]]></isNotNull>
    <isNotNull property="NOTICE_NUM" prepend=","><![CDATA[NOTICE_NUM = #NOTICE_NUM# ]]></isNotNull>
    <isNotNull property="PRICE" prepend=","><![CDATA[PRICE = #PRICE# ]]></isNotNull>
    <isNotNull property="DECT_RATE" prepend=","><![CDATA[DECT_RATE = #DECT_RATE# ]]></isNotNull>
    <isNotNull property="DECT_PRICE" prepend=","><![CDATA[DECT_PRICE = #DECT_PRICE# ]]></isNotNull>
    <isNotNull property="DECT_AMOUNT" prepend=","><![CDATA[DECT_AMOUNT = #DECT_AMOUNT# ]]></isNotNull>
    <isNotNull property="REMARK" prepend=","><![CDATA[REMARK = #REMARK# ]]></isNotNull>
    <isNotNull property="FROM_BILL_DTL_ID" prepend=","><![CDATA[FROM_BILL_DTL_ID = #FROM_BILL_DTL_ID# ]]></isNotNull>
    <isNotNull property="SPCL_TECH_ID" prepend=","><![CDATA[SPCL_TECH_ID = #SPCL_TECH_ID# ]]></isNotNull>
    
    </dynamic>
	<![CDATA[ where STOREOUT_NOTICE_DTL_ID = #STOREOUT_NOTICE_DTL_ID#]]>
</update>
<!--明细表插入 -->
<insert id="insertChld" parameterClass="map">
  <![CDATA[
	  insert into DRP_STOREOUT_NOTICE_DTL(
		STOREOUT_NOTICE_DTL_ID,
		STOREOUT_NOTICE_ID,
		PRD_ID,
		PRD_NO,
		PRD_NAME,
		PRD_SPEC,
		PRD_COLOR,
		BRAND,
		STD_UNIT,
		NOTICE_NUM,
		PRICE,
		DECT_RATE,
		DECT_PRICE,
		DECT_AMOUNT,
		REMARK,
		DEL_FLAG,
		FROM_BILL_DTL_ID,
		SPCL_TECH_ID
	   )values(
		#STOREOUT_NOTICE_DTL_ID#,
		#STOREOUT_NOTICE_ID#,
		#PRD_ID#,
		#PRD_NO#,
		#PRD_NAME#,
		#PRD_SPEC#,
		#PRD_COLOR#,
		#BRAND#,
		#STD_UNIT#,
		#NOTICE_NUM#,
		#PRICE#,
		#DECT_RATE#,
		#DECT_PRICE#,
		#DECT_AMOUNT#,
		#REMARK#,
		#DEL_FLAG#,
		#FROM_BILL_DTL_ID#,
		#SPCL_TECH_ID#
		)
   ]]>
</insert>
<update id="upSTOREOUT_AMOUNT" parameterClass="map">
	update DRP_STOREOUT_NOTICE set 
		STOREOUT_AMOUNT=
			(select 
				sum(DECT_AMOUNT) 
			from DRP_STOREOUT_NOTICE_DTL 
			where STOREOUT_NOTICE_ID=#STOREOUT_NOTICE_ID# and DEL_FLAG=#DEL_FLAG#)
	where STOREOUT_NOTICE_ID=#STOREOUT_NOTICE_ID#
</update>
<update id="upSTOREOUT_AMOUNT_DTL" parameterClass="map">
	update DRP_STOREOUT_NOTICE set 
		STOREOUT_AMOUNT=
			(select 
				sum(DECT_AMOUNT) 
			from DRP_STOREOUT_NOTICE_DTL 
			where STOREOUT_NOTICE_ID in 
				(select 
					STOREOUT_NOTICE_ID 
				from DRP_STOREOUT_NOTICE_DTL 
				where STOREOUT_NOTICE_DTL_ID in ($STOREOUT_NOTICE_DTL_IDS$)) 
			and DEL_FLAG=#DEL_FLAG#)
	where STOREOUT_NOTICE_ID in 
				(select 
					STOREOUT_NOTICE_ID 
				from DRP_STOREOUT_NOTICE_DTL 
				where STOREOUT_NOTICE_DTL_ID in ($STOREOUT_NOTICE_DTL_IDS$))
</update>
<insert id="insertStoreOut" parameterClass="map">
	insert into DRP_STOREOUT(
		STOREOUT_ID,
		STOREOUT_NO,
		BILL_TYPE,
		FROM_BILL_ID,
		FROM_BILL_NO,
		SEND_CHANN_ID,
		SEND_CHANN_NO,
		SEND_CHANN_NAME,
		STOREOUT_STORE_ID,
		STOREOUT_STORE_NO,
		STOREOUT_STORE_NAME,
		STORAGE_FLAG,
		RECV_CHANN_ID,
		RECV_CHANN_NO,
		RECV_CHANN_NAME,
		SALE_DATE,
		RECV_ADDR,
		STOREOUT_AMOUNT,
		REMARK,
		STATE,
		RECV_FLAG,
		CREATOR,
		CRE_NAME,
		CRE_TIME,
		DEPT_ID,
		DEPT_NAME,
		ORG_ID,
		ORG_NAME,
		LEDGER_ID,
		LEDGER_NAME,
		DEL_FLAG
	)
	select 
		#STOREOUT_ID#,
		#STOREOUT_NO#,
		#BILL_TYPE#,
		STOREOUT_NOTICE_ID,
		STOREOUT_NOTICE_NO,
		SEND_CHANN_ID,
		SEND_CHANN_NO,
		SEND_CHANN_NAME,
		STOREOUT_STORE_ID,
		STOREOUT_STORE_NO,
		STOREOUT_STORE_NAME,
		#STORAGE_FLAG#,
		RECV_CHANN_ID,
		RECV_CHANN_NO,
		RECV_CHANN_NAME,
		SALE_DATE,
		RECV_ADDR,
		STOREOUT_AMOUNT,
		REMARK,
		#STATE#,
		#RECV_FLAG#,
		#CREATOR#,
		#CRE_NAME#,
		sysdate,
		#DEPT_ID#,
		#DEPT_NAME#,
		#ORG_ID#,
		#ORG_NAME#,
		#LEDGER_ID#,
		#LEDGER_NAME#,
		#DEL_FLAG#
	from DRP_STOREOUT_NOTICE where STOREOUT_NOTICE_ID=#STOREOUT_NOTICE_ID#
</insert>
<update id="upSaleOrderDtl" parameterClass="map">
	update DRP_SALE_ORDER_DTL set SENDED_NUM=NVL(#NOTICE_NUM#,0)+NVL(SENDED_NUM,0) where SALE_ORDER_DTL_ID=#FROM_BILL_DTL_ID#
</update>
<update id="delDtl" parameterClass="string">
	update DRP_STOREOUT_NOTICE_DTL set DEL_FLAG=1 where STOREOUT_NOTICE_ID=#STOREOUT_NOTICE_ID#
</update>
</sqlMap>

