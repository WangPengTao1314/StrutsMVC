/** * 项目名称：平台 * 系统名： * 文件名：Notice.java*/package com.hoperun.sys.service;import java.util.List;import java.util.Map;import com.hoperun.base.prdgroup.model.PrdGroupDtlModel;import com.hoperun.commons.model.IListPage;import com.hoperun.commons.service.IBaseService;import com.hoperun.sys.model.NotcAreaModel;import com.hoperun.sys.model.NotcDeptModel;import com.hoperun.sys.model.NoticeModel;import com.hoperun.sys.model.UserBean;// TODO: Auto-generated Javadoc/** * *@module * *@func * *@version 1.1 * *@author zhuxw * *@createdate 2011-11-16 */public interface NoticeService extends IBaseService {	/**	 * * 查询并分页	 * * @param params map对象	 * * @param pageNo 页码.	 * 	 * @param params the params	 * @param pageNo the page no	 * 	 * @return the i list page	 */	public IListPage pageQuery(Map<String,String> params, int pageNo);	/**	 * * 删除数据	 * * @param NOTICEID.	 * 	 * @param NOTICEID the nOTICEID	 * 	 * @return true, if tx delete	 */	public boolean txDelete(String NOTICEID,UserBean userBean);	/**	 * * 详细信息	 * * @param param 主键字段值.	 * 	 * @param param the param	 * 	 * @return the map< string, string>	 */	public Map<String,String> load(String param);		/**	 * * 编辑：新增/删除	 * * Description :	 * * @param NOTICEID	 * * @param noticeModel	 * * @param userBean.	 * 	 * @param NOTICEID the nOTICEID	 * @param noticeModel the notice model	 * @param userBean the user bean	 */	public void txEdit(String NOTICEID, NoticeModel noticeModel, UserBean userBean);			      /**     * 根据主表id查询子表明细     *      * @param pId  主表ID     *      * @return       */        public List<NotcAreaModel> childQuery(String pId);        /**     * 根据主表id查询子表明细     *      * @param pId  主表ID     *      * @return       */        public List<NotcDeptModel> childDeptQuery(String pId);    /**     * 根据主表id查询字表是否有记录     * @param pId  主表ID     * @return  0 无记录      */        public int childQueryForInt(String pId);        public int childDeptQueryForInt(String pId);    /**     * * 根据子表Id批量加载子表信息     * @param params 子表IDS     *      * @return the list     */    public List <NotcAreaModel> loadChilds(Map <String, String> params) ;    /**     * * 根据子表Id批量加载子表信息     * @param params 子表IDS     *      * @return the list     */    public List <NotcDeptModel> loadDeptChilds(Map <String, String> params) ;    		 /**    * * 子表记录编辑：新增/修改    * @param groupId 主表ID    * @param modelList the 子表 list    *     * @return true, if tx child edit    */   public boolean txChildEdit(String pId, List <NotcAreaModel> modelList);	 /**    * * 子表记录编辑：新增/修改    * @param groupId 主表ID    * @param modelList the 子表 list    *     * @return true, if tx child edit    */   public boolean txChildDeptEdit(String pId, List <NotcDeptModel> modelList);         /**    * * 子表的批量删除    * @param IDs the IDs    */   public void txBatch4DeleteChild(String pID,String IDs);         /**    * * 子表的批量删除    * @param IDs the IDs    */   public void txBatch4DeleteDeptChild(String pID,String IDs);      /**    * 查询    * @param paramMap    * @return    */   public List findList(Object paramMap);   public List findDeptList(Object paramMap);      /**    * 关闭    * @param NOTICEID    */   public void txClose(String NOTICEID,UserBean userBean);}
