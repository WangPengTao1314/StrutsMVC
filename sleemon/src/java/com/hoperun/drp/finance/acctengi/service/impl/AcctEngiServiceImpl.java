package com.hoperun.drp.finance.acctengi.service.impl;/** * 项目名称：喜临门DM系统 * 系统名： * 文件名：AcctEngiServiceImpl.java*/import java.util.HashMap;import java.util.List;import java.util.Map;import com.google.gson.Gson;import com.hoperun.commons.exception.ServiceException;import com.hoperun.commons.model.IListPage;import com.hoperun.commons.service.BaseService;import com.hoperun.commons.util.StringUtil;import com.hoperun.drp.finance.acctengi.service.AcctEngiService;public class AcctEngiServiceImpl extends BaseService implements AcctEngiService {	/**	 * 查询并分页	 * @param params map对象 Map	 * @param pageNo 页码 int	 * @return IListPage	 */	@SuppressWarnings("unchecked")	public IListPage pageQuery(Map params, int pageNo) {		return this.pageQuery("acctengi.pageQuery", "acctengi.pageCount",params, pageNo,12);	}	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map chkAccount(Map params) {		return (Map) this.load("acctengi.chkAccount", params);	}	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map chkNotice(Map params) {		return (Map) this.load("acctengi.chkNotice", params);	}		/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map getPreCycle(Map params) {		return (Map) this.load("acctengi.getPreCycle", params);	}	public Map getChannInfo(Map params) {		return (Map) this.load("acctengi.getChannInfo", params);	}			/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public void txDoAccount(Map params) {	  if("1".equals(params.get("IS_NOTICE_FLAG").toString()))		{		  this.update("acctengi.updNotice", params);			 		}else		{   		  String uuId=StringUtil.uuid32len();		  params.put("ACCT_ENGI_NOTE_ID", uuId); 		  this.insert("acctengi.insNotice", params);		}	  //删除之前插入的数据	  //直营办销售订单	  this.delete("acctengi.delSaleOrderDtl_A", params);	  this.delete("acctengi.delSaleOrder_A", params);	  //直营办出货单	  this.delete("acctengi.delStoreOutDtl_A", params);	  this.delete("acctengi.delStoreOut_A", params);	  //--直营办退货单 	  this.delete("acctengi.delReturnDtl_A", params);	  this.delete("acctengi.delReturn_A", params);	  //直营办退货入库单	  this.delete("acctengi.delReturnStoreInDtl_A", params);	  this.delete("acctengi.delReturnStoreIn_A", params);	   //门店销售出库单	  this.delete("acctengi.delTermStoreOutDtl_A", params);	  this.delete("acctengi.delTermStoreout_A", params);	   //门店退货出库单	  this.delete("acctengi.delTermReturnStoreOutDtl_A", params);	  this.delete("acctengi.delTermReturnStoreout_A", params);	  //门店退货入库单	  this.delete("acctengi.delTermReturnStoreInDtl_A", params);	  this.delete("acctengi.delTermReturnStoreIn_A", params);	  	  //查询出来门店的价格公式设置	  String tempsql=" select  a.TERM_NAME   from BASE_TERMINAL a ,BASE_CHANN b" +	  		" where a.CHANN_ID_P =b.CHANN_ID and CHANN_ID='"+StringUtil.nullToSring(params.get("LEDGER_ID"))+"' and PRICE_EXPRESS is null ";	  Map commsql=new HashMap();	  params.put("SelSQL", tempsql);	  List chkList = selcomList(params);	        if(chkList!=null&&chkList.size()>0)      {    	  throw new ServiceException("直营办销售给门店价格没有维护，请到门店信息中维护："+new Gson().toJson(chkList));      }     	   //插入数据	  this.insert("acctengi.insSaleOrder_A", params);	  this.insert("acctengi.insSaleOrderDtl_A", params);	  this.insert("acctengi.insStoreOut_A", params);	  this.insert("acctengi.insStoreOutDtl_A", params);	  this.update("acctengi.updStoreOut_A", params);	  this.insert("acctengi.insReturn_A", params);	  this.insert("acctengi.insReturnDtl_A", params);	  	  this.insert("acctengi.insReturnStoreIn_A", params);	  this.insert("acctengi.insReturnStoreInDtl_A", params);	  	  this.insert("acctengi.insTermStoreout_A", params);	  this.insert("acctengi.insTermStoreOutDtl_A", params);	  	  this.insert("acctengi.insTermReturnStoreout_A", params);	  this.insert("acctengi.insTermReturnStoreOutDtl_A", params);	  	  this.insert("acctengi.insTermReturnStoreIn_A", params);	  this.insert("acctengi.insTermReturnStoreInDtl_A", params);	  	  tempsql=" select PRICE_EXPRESS ,a.TERM_ID from BASE_TERMINAL a ,BASE_CHANN b where a.CHANN_ID_P =b.CHANN_ID and CHANN_ID='"+StringUtil.nullToSring(params.get("LEDGER_ID"))+"' ";	  params.put("SelSQL", tempsql);      List rstList = selcomList(params);      int len =rstList.size();      for(int i=0;i<len;i++)      {    	  Map rstMap=(Map)rstList.get(i);    	  params.put("PRICE_EXPRESS", rstMap.get("PRICE_EXPRESS"));    	  params.put("TERM_ID", rstMap.get("TERM_ID"));    	  this.update("acctengi.updSaleOrderDtlPrice1", params);    	  this.update("acctengi.updStoreOutDtlPrice1", params);    	  this.update("acctengi.updReturnDtlPrice1", params);    	  this.update("acctengi.updReturnStoreInDtlPrice1", params);    	  this.update("acctengi.updTermReturnStoreOutDtlPrice1", params);      }      this.update("acctengi.updSaleOrderDtlPrice2", params);	  this.update("acctengi.updStoreOutDtlPrice2", params);	  this.update("acctengi.updReturnDtlPrice2", params);	  this.update("acctengi.updReturnStoreInDtlPrice2", params);	  this.update("acctengi.updTermReturnStoreOutDtlPrice2", params);		  this.update("acctengi.updStoreOut_A", params);		  	}	/**	 * 通用注释取消	 * @param params map对象 Map  	 * @param 	 * @return 	 */	public void txCancleAccount(Map params) {		  this.update("acctengi.updCancleAmount", params);		  //删除之前插入的数据		  //直营办销售订单		  this.delete("acctengi.delSaleOrderDtl_A", params);		  this.delete("acctengi.delSaleOrder_A", params);		  //直营办出货单		  this.delete("acctengi.delStoreOutDtl_A", params);		  this.delete("acctengi.delStoreOut_A", params);		  //--直营办退货单 		  this.delete("acctengi.delReturnDtl_A", params);		  this.delete("acctengi.delReturn_A", params);		  //直营办退货入库单		  this.delete("acctengi.delReturnStoreInDtl_A", params);		  this.delete("acctengi.delReturnStoreIn_A", params);		   //门店销售出库单		  this.delete("acctengi.delTermStoreOutDtl_A", params);		  this.delete("acctengi.delTermStoreout_A", params);		   //门店退货出库单		  this.delete("acctengi.delTermReturnStoreOutDtl_A", params);		  this.delete("acctengi.delTermReturnStoreout_A", params);		  //门店退货入库单		  this.delete("acctengi.delTermReturnStoreInDtl_A", params);		  this.delete("acctengi.delTermReturnStoreIn_A", params);		  		  	}	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map chkPreAccount(Map params) {		return (Map) this.load("acctengi.chkPreAccount", params);	}	 //通用增删改查    /* (non-Javadoc)     * @see com.hoperun.sys.service.FlowService#selcom(java.util.Map)     */    public Map selcom(Map params) {        return (Map) load("sqlcom.query", params);    }    /* (non-Javadoc)     * @see com.hoperun.sys.service.FlowService#selcomList(java.util.Map)     */    public List selcomList(Map params) {        return this.findList("sqlcom.query", params);    }}