package com.hoperun.drp.finance.account.action;/** * 项目名称：方源ERP系统 * 系统名： * 文件名：ActAction.java */import java.io.PrintWriter;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import com.hoperun.commons.action.BaseAction;import com.hoperun.commons.model.IListPage;import com.hoperun.commons.util.ParamUtil;import com.hoperun.commons.util.StringUtil;import com.hoperun.commons.util.TimeComm;import com.hoperun.drp.finance.account.service.ActService;import com.hoperun.sys.model.UserBean;/** * @module * @func 库存月结 * @version 1.0 * @author ma_he */public class ActAction extends BaseAction {	/** 业务逻辑对象 */	private ActService actService;	public ActionForward toFrame(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response) {		// 设置跳转时需要的一些公用属性		ParamUtil.setCommAttributeEx(request);		return mapping.findForward("frames");	}	/**	 * 查询结果列表	 * 	 * @param mapping	 *            ActionMapping	 * @param form	 *            ActionForm	 * @param request	 *            HttpServletRequest	 * @param response	 *            HttpServletResponse	 * @return ActionForward	 */	public ActionForward toList(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response) {		Map<String, String> params = new HashMap<String, String>();		/**        ParamUtil.putStr2Map(request, "FINANCIAL_CYCLE", params);        ParamUtil.putStr2Map(request, "CYCLE_START", params);        ParamUtil.putStr2Map(request, "CYCLE_END", params);        ParamUtil.putStr2Map(request, "CYCLE_NAME", params);        ParamUtil.putStr2Map(request, "CYCLE_NAME", params);        **/		ParamUtil.putStr2Map(request, "YEAR", params);	    ParamUtil.putStr2Map(request, "MONTH", params);        UserBean userBean = (UserBean) request.getSession(false).getAttribute("UserBean");		params.put("LEDGER_NO", userBean.getCHANN_NO());		params.put("LEDGER_NAME", userBean.getCHANN_NAME());		params.put("IS_DRP_LEDGER", userBean.getIS_DRP_LEDGER());		params.put("LEDGER_ID", userBean.getCHANN_ID());		if("1".equals(userBean.getIS_DRP_LEDGER()))		{			params.put("LEDGER_IDS", "('"+userBean.getCHANN_ID()+"')");		}else		{			params.put("LEDGER_IDS", userBean.getCHANNS_CHARG());		}		params.put("CUR_YEAR",TimeComm.getYear());		params.put("CUR_MONTH",TimeComm.getMonth());		ParamUtil.setOrderField(request, params);		params.put("orderField","  u.YEAR DESC , u.MONTH DESC ");		int pageNo = ParamUtil.getInt(request, "pageNo", 1);		ParamUtil.putStr2Map(request, "pageSize", params);		if(StringUtil.isEmpty(params.get("pageSize"))){			params.put("pageSize", "12");		}		try {			IListPage page = actService.pageQuery(params, pageNo);			request.setAttribute("page", page);		} catch (RuntimeException e) {			e.printStackTrace();		}		request.setAttribute("params", params);				return mapping.findForward("list");	}	/**	 * 判断是否满足月结条件	 * 	 * @param mapping	 *            ActionMapping	 * @param form	 *            ActionForm	 * @param request	 *            HttpServletRequest	 * @param response	 *            HttpServletResponse	 * @return ActionForward	 */	@SuppressWarnings("unchecked")	public void chkAccount(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response) {		PrintWriter writer = getWriter(response);		String jsonResult = jsonResult();		try {			UserBean userBean = (UserBean) request.getSession(false).getAttribute("UserBean");			String vCHANN_ID = request.getParameter("CHANN_ID");			String vYEAR = request.getParameter("YEAR");			String vMONTH = request.getParameter("MONTH");			Map params=new HashMap();			params.put("LEDGER_ID", vCHANN_ID);			params.put("YEAR", vYEAR);			params.put("MONTH", vMONTH);		    String preYearMonth[]=preYearMonth(vYEAR,vMONTH);			    params.put("PRE_YEAR", preYearMonth[0]);			params.put("PRE_MONTH", preYearMonth[1]);			params.put("STATE", "已月结");			Map channMap=actService.getChannInfo(params);			if(channMap!=null)			{				String init_year=StringUtil.nullToSring(channMap.get("INIT_YEAR"));				String init_month=StringUtil.nullToSring(channMap.get("INIT_MONTH"));				if(StringUtil.isEmpty(init_year)||StringUtil.isEmpty(init_month))				{					jsonResult = jsonResult(false, "渠道没有维护初始化年份、月份信息,请在渠道参数设置页面!");				}else				{					Map chkMap=actService.chkAccount(params);                    if(Integer.parseInt(init_year+init_month)>=Integer.parseInt(vYEAR+vMONTH))					{						jsonResult = jsonResult(false, "您选择的年份、月份必须在:"+init_year+init_month+"之后！");					}					else if(init_year.equals(preYearMonth[0])&&init_month.equals(preYearMonth[1]))					{						System.err.println("chkMap.get().toString()===="+chkMap.get("THE_NUM"));					    if("1".equals(chkMap.get("THE_NUM").toString()))						{							jsonResult = jsonResult(false, "当前月份已经月结!");						}else						{							jsonResult = jsonResult(true, "");													}												}else					{						if(!"1".equals(chkMap.get("PRE_NUM").toString()))						{							jsonResult = jsonResult(false, "请先月结上月份!");						}else if("1".equals(chkMap.get("THE_NUM").toString()))						{							jsonResult = jsonResult(false, "当前月份已经月结!");						}else						{							jsonResult = jsonResult(true, "");													}												}									}								}else			{				jsonResult = jsonResult(false, "找不到对应的渠道信息!");							}			} catch (Exception e) {			jsonResult = jsonResult(false, "月结失败:"+e.getMessage());		}		if (null != writer) {			writer.write(jsonResult);			writer.close();		}	}		/**	 * 开始月结	 * 	 * @param mapping	 *            ActionMapping	 * @param form	 *            ActionForm	 * @param request	 *            HttpServletRequest	 * @param response	 *            HttpServletResponse	 * @return ActionForward	 */	@SuppressWarnings("unchecked")	public void doAccount(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response) {		PrintWriter writer = getWriter(response);		String jsonResult = jsonResult();		try {			UserBean userBean = (UserBean) request.getSession(false).getAttribute("UserBean");			String vCHANN_ID = request.getParameter("CHANN_ID");			String vYEAR = request.getParameter("YEAR");			String vMONTH = request.getParameter("MONTH");						Map params=new HashMap();			params.put("LEDGER_ID", vCHANN_ID);			params.put("YEAR", vYEAR);			params.put("MONTH", vMONTH);			params.put("YEAR_MONTH", vYEAR+"/"+vMONTH);		    String preYearMonth[]=preYearMonth(vYEAR,vMONTH);			    params.put("PRE_YEAR", preYearMonth[0]);			params.put("PRE_MONTH", preYearMonth[1]);			params.put("UPD_NAME", userBean.getXM());			Map chkMap=actService.chkNotice(params);			params.put("IS_NOTICE_FLAG",chkMap.get("IS_NOTICE_FLAG"));						//获得成本的计算方式			Map channMap=actService.getChannInfo(params);			if(channMap!=null)			{				params.put("COST_TYPE",channMap.get("COST_TYPE"));			}			actService.txDoAccount(params);			jsonResult = jsonResult(true, "月结成功！");					} catch (Exception e) {			jsonResult = jsonResult(false, "月结失败:"+e.getMessage());			e.printStackTrace();		}		if (null != writer) {			writer.write(jsonResult);			writer.close();		}	}		/**	 * 取消月结	 * 	 * @param mapping	 *            ActionMapping	 * @param form	 *            ActionForm	 * @param request	 *            HttpServletRequest	 * @param response	 *            HttpServletResponse	 * @return ActionForward	 */	@SuppressWarnings("unchecked")	public void cancleAccount(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response) {		PrintWriter writer = getWriter(response);		String jsonResult = jsonResult();		try {			UserBean userBean = (UserBean) request.getSession(false).getAttribute("UserBean");			String vCHANN_ID = request.getParameter("CHANN_ID");			String vYEAR = request.getParameter("YEAR");			String vMONTH = request.getParameter("MONTH");			Map params=new HashMap();			params.put("LEDGER_ID", vCHANN_ID);			params.put("YEAR", vYEAR);			params.put("MONTH", vMONTH);		    String nexYearMonth[]=nexYearMonth(vYEAR,vMONTH);			    params.put("NEX_YEAR", nexYearMonth[0]);			params.put("NEX_MONTH", nexYearMonth[1]);			params.put("UPD_NAME", userBean.getXM());			Map chkMap=actService.chkPreAccount(params);			if("1".equals(chkMap.get("IS_ACCT_FLAG").toString()))			{				jsonResult = jsonResult(false, "请先取消下一个月份的月结!");			}else			{				actService.txCancleAccount(params);				jsonResult = jsonResult(true, "取消月结成功！");							}					} catch (Exception e) {			jsonResult = jsonResult(false, "取消月结失败:"+e.getMessage());			e.printStackTrace();		}		if (null != writer) {			writer.write(jsonResult);			writer.close();		}	}		/**	 * 获得前一个月份	 * 	 * @return ActionForward	 */	public String[] nexYearMonth (String year,String month) {		String [] year_Month=new String [2];		if(month.equals("12"))		{			year_Month[0]=String.valueOf(Integer.parseInt(year)+1);			year_Month[1]="01";		}else if(month.equals("11"))		{			year_Month[0]=year;			year_Month[1]="12";					}else if(month.equals("10"))		{			year_Month[0]=year;			year_Month[1]="11";					}else if(month.equals("09"))		{			year_Month[0]=year;			year_Month[1]="10";					}else if(month.equals("08"))		{			year_Month[0]=year;			year_Month[1]="09";					}else if(month.equals("07"))		{			year_Month[0]=year;			year_Month[1]="08";					}else if(month.equals("06"))		{			year_Month[0]=year;			year_Month[1]="07";					}else if(month.equals("05"))		{			year_Month[0]=year;			year_Month[1]="06";					}else if(month.equals("04"))		{			year_Month[0]=year;			year_Month[1]="05";					}else if(month.equals("03"))		{			year_Month[0]=year;			year_Month[1]="04";					}else if(month.equals("02"))		{			year_Month[0]=year;			year_Month[1]="03";					}else if(month.equals("01"))		{			year_Month[0]=year;			year_Month[1]="02";					}		return year_Month;	}		/**	 * 获得后一个月份	 * 	 * @return ActionForward	 */	public String[] preYearMonth (String year,String month) {		String [] year_Month=new String [2];		if(month.equals("12"))		{			year_Month[0]=year;			year_Month[1]="11";		}else if(month.equals("11"))		{			year_Month[0]=year;			year_Month[1]="10";					}else if(month.equals("10"))		{			year_Month[0]=year;			year_Month[1]="09";					}else if(month.equals("09"))		{			year_Month[0]=year;			year_Month[1]="08";					}else if(month.equals("08"))		{			year_Month[0]=year;			year_Month[1]="07";					}else if(month.equals("08"))		{			year_Month[0]=year;			year_Month[1]="07";					}else if(month.equals("07"))		{			year_Month[0]=year;			year_Month[1]="06";					}else if(month.equals("06"))		{			year_Month[0]=year;			year_Month[1]="05";					}else if(month.equals("05"))		{			year_Month[0]=year;			year_Month[1]="04";					}else if(month.equals("04"))		{			year_Month[0]=year;			year_Month[1]="03";					}else if(month.equals("03"))		{			year_Month[0]=year;			year_Month[1]="02";					}else if(month.equals("02"))		{			year_Month[0]=year;			year_Month[1]="01";					}else if(month.equals("01"))		{			year_Month[0]=String.valueOf(Integer.parseInt(year)-1);			year_Month[1]="12";					}		return year_Month;	}				public ActService getActService() {		return actService;	}	public void setActService(ActService actService) {		this.actService = actService;	}			/**	 * 检查该财政周期下是否有未处理单据	 * 	 * @param mapping	 *            ActionMapping	 * @param form	 *            ActionForm	 * @param request	 *            HttpServletRequest	 * @param response	 *            HttpServletResponse	 * @return ActionForward	 */	@SuppressWarnings("unchecked")	public void checkWCL(ActionMapping mapping, ActionForm form,			HttpServletRequest request, HttpServletResponse response) {		PrintWriter writer = getWriter(response);		String jsonResult = jsonResult();		try {			UserBean userBean = (UserBean) request.getSession(false).getAttribute("UserBean");			String FINANCIAL_CYCLE = request.getParameter("FINANCIAL_CYCLE");			String CYCLE_START = request.getParameter("CYCLE_START");			String CYCLE_END = request.getParameter("CYCLE_END");			String CYCLE_NAME = request.getParameter("CYCLE_NAME");			String NFYF = request.getParameter("NFYF");			Map params=new HashMap();			params.put("JGXXID", userBean.getJGXXID());			params.put("FINANCIAL_CYCLE", FINANCIAL_CYCLE);			params.put("CYCLE_NAME", CYCLE_NAME);			params.put("CYCLE_START", CYCLE_START);			params.put("CYCLE_END", CYCLE_END);			params.put("NFYF", NFYF);			List<Map<String, String>> wclList=(List<Map<String, String>>) actService.checkWCL(params);			int i=wclList.size();			if (i==0) {				jsonResult = jsonResult(true, "");			}else {				actService.delete("account.deleteWCL", FINANCIAL_CYCLE);				actService.insertWCL(wclList,userBean);				jsonResult = jsonResult(false, "");			}		} catch (Exception e) {			jsonResult = jsonResult(false, "月结失败:"+e.getMessage());			e.printStackTrace();		}		if (null != writer) {			writer.write(jsonResult);			writer.close();		}	}			}