package com.hoperun.drp.finance.account.service.impl;/** * 项目名称：方源系统 * 系统名： * 文件名：AccountServiceImpl.java*/import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import com.hoperun.commons.model.IListPage;import com.hoperun.commons.service.BaseService;import com.hoperun.commons.util.DateUtil;import com.hoperun.commons.util.StringUtil;import com.hoperun.drp.finance.account.service.ActService;import com.hoperun.sys.model.UserBean;public class ActServiceImpl extends BaseService implements ActService {	/**	 * 查询并分页	 * @param params map对象 Map	 * @param pageNo 页码 int	 * @return IListPage	 */	@SuppressWarnings("unchecked")	public IListPage pageQuery(Map params, int pageNo) {		return this.pageQuery("account.pageQuery", "account.pageCount",params, pageNo);	}	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map chkAccount(Map params) {		return (Map) this.load("account.chkAccount", params);	}	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map chkNotice(Map params) {		return (Map) this.load("account.chkNotice", params);	}		/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map getPreCycle(Map params) {		return (Map) this.load("account.getPreCycle", params);	}	public Map getChannInfo(Map params) {		return (Map) this.load("account.getChannInfo", params);	}			/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public void txDoAccount(Map params) {	  if("1".equals(params.get("IS_NOTICE_FLAG").toString()))		{		  this.update("account.updNotice", params);			 		}else		{   		  String uuId=StringUtil.uuid32len();		  params.put("MONTH_ACCT_NOTE_ID", uuId); 		  this.insert("account.insNotice", params);		}	  this.delete("account.delInvoc", params);	  this.delete("account.delCostPrice", params);	  	  System.err.println("COST_TYPE===="+params.get("COST_TYPE"));	  if("不含税方式".equals(params.get("COST_TYPE")))	  {		  this.insert("account.insInvoc_no_rate", params);  	  }else	  {		  		  this.insert("account.insInvoc", params);   	  }	 // this.update("account.updCostAjust", params);	  if("不含税方式".equals(params.get("COST_TYPE")))	  {		  this.insert("account.insCostPrice_no_rate", params);	  }else	  {		  		  this.insert("account.insCostPrice", params);   	  }	  this.update("account.updInvoc1", params);	  this.update("account.updInvoc2", params);	  this.update("account.updInvoc3", params);	  this.update("account.updInvoc4", params);	  this.delete("account.updInvoc5", params);	  	 }	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public void txCancleAccount(Map params) {		  this.update("account.updCancleAmount", params);	}	/**	 * 通用注释	 * @param params map对象 Map	 * @param 	 * @return 	 */	public Map chkPreAccount(Map params) {		return (Map) this.load("account.chkPreAccount", params);	}		//006 ZHENGYI 20131114 BEGIN	/**	 * 检查该财政周期下是否有未处理单据	 * @param params map对象 Map	 * @param 	 * @return 	 */	public List<Map<String, String>> checkWCL(Map params) {		return (List<Map<String, String>>) this.findList("account.checkWCL", params);	}	/**	 * 	 * @param params map对象 Map	 * @param 	 */	public void insertWCL(List<Map<String, String>> list,UserBean userBean) {		List addList = new ArrayList<Map<String, String>>();		for(Map m : list){			Map param = new HashMap<String, String>();			param.put("WCLDJID", StringUtil.uuid32len());			param.put("DJLX", m.get("DJLX"));				param.put("CYCLE_NAME", m.get("CYCLE_NAME"));			param.put("FINANCIAL_CYCLE", m.get("FINANCIAL_CYCLE"));			param.put("CYCLE_START", m.get("CYCLE_START"));			param.put("CYCLE_END", m.get("CYCLE_END"));			param.put("NFYF", m.get("NFYF"));			param.put("DJBH", m.get("DJBH"));			param.put("WCLCREATER", m.get("WCLCREATER"));			param.put("WCLCRENAME", m.get("WCLCRENAME"));			param.put("WCLCRETIME",m.get("WCLCRETIME"));			param.put("WCLBMXXID", m.get("WCLBMXXID"));			param.put("WCLBMMC", m.get("WCLBMMC"));			param.put("CREATER", userBean.getXTYHID());			param.put("CRENAME", userBean.getXM());			param.put("CRETIME", DateUtil.now());			param.put("BMXXID", userBean.getBMXXID());			param.put("BMMC", userBean.getBMMC());			param.put("DELFLAG", "0");			param.put("JGXXID", userBean.getJGXXID());			param.put("ZTXXID", userBean.getLoginZTXXID());			param.put("JGMC", userBean.getJGMC());			param.put("ZTMC", userBean.getLoginZTMC());			addList.add(param);		}		this.batch4Update("account.insertWCL", addList);	}		/**	 * 查询并分页	 * @param params map对象 Map	 * @param pageNo 页码 int	 * @return IListPage	 */	@SuppressWarnings("unchecked")	public IListPage pageQueryWCL(Map params, int pageNo) {		return this.pageQuery("account.pageQueryWCL", "account.pageCountWCL",params, pageNo,12);	}	/**	 * 数据导出到EXCEL	 * 	 * @param workBook	 *            HSSFWorkbook	 * @param filename	 *            String	 * @param rsList	 *            List	 * @param xlsName	 *            String	 * @param sheetName	 *            String	 * @param userBean	 *            UserBean	 */	@SuppressWarnings("unchecked")	public void txDbToExecl(HSSFWorkbook workBook, String filename,			List rsList, String xlsName, String sheetName, UserBean userBean) {		}	//006 ZHENGYI 20131114 END}